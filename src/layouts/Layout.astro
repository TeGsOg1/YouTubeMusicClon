---
import "../styles/global.css"
import NavBar from '@/components/NavBar.astro';
import Aside from '@/components/Aside.astro';
import Footer from '@/components/Footer.astro';
import Background from '@/components/Background.astro';
import { PlayerOpenDesk } from '@/components/PlayerOpenDesk';

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
import { ClientRouter } from 'astro:transitions';
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="icon" href='@/components/icons/YTM.svg' sizes="32x32" type="image/png">
    <ClientRouter />
  </head>
  <body class="overflow-x-hidden h-dvh">
    <div id="app" class="relative h-auto w-full">
      <div class="relative">
        <Background />
        <NavBar />
        <Aside />
        <main class="flex flex-col relative w-full h-vh gap-4 py-20 p-4 mb-20 md:pl-72 transition-all overflow-hidden">
          <slot />
          <PlayerOpenDesk client:load/>
        </main>
      </div>
      <Footer />
    </div>
  </body>
</html>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const explorerText = document.querySelector('#expl-txt');
    const libraryText = document.querySelector('#lib-txt');
    const principalText = document.querySelector('#princ-txt');
    
    const explorer = document.querySelector('#expl');
    const library = document.querySelector('#lib');
    const principal = document.querySelector('#princ');
    
    const $main = document.querySelector('main');
    const $button  = document.querySelector('#button');
    const $aside = document.querySelector('aside');

  $button?.addEventListener('click', () => {
    if(screen.width > 768) {
    $aside?.classList.toggle('w-[60px]');
    explorerText?.classList.toggle('hidden');
    libraryText?.classList.toggle('hidden');
    principalText?.classList.toggle('hidden');
    $main?.classList.toggle('md:pl-[90px]');
      if($aside?.classList.contains('w-[60px]')) {
        explorer?.classList.remove('px-[70px]');
        library?.classList.remove('px-[70px]');
        principal?.classList.remove('px-[70px]');
        explorer?.classList.add('px-[18px]');
        library?.classList.add('px-[18px]');
        principal?.classList.add('px-[18px]')
      }
      else {
        explorer?.classList.remove('px-[18px]');
        library?.classList.remove('px-[18px]');
        principal?.classList.remove('px-[18px]')
        explorer?.classList.add('px-[70px]');
        library?.classList.add('px-[70px]');
        principal?.classList.add('px-[70px]');
      }
    }
  });
  
  if($aside?.classList.contains('w-[60px]')) {
    $main?.classList.toggle('md:pl-[90px]');
    explorer?.classList.add('px-[18px]');
    library?.classList.add('px-[18px]');
    principal?.classList.add('px-[18px]');
  } 
});
</script>

<style is:global>

  @import "tailwindcss"
  
  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }



  /* Keyframe to NavBar Animation
  ------------------------------------------------------ */

  @keyframes scrollBlur {
    to {
       background: rgba(0, 0, 0, 0.3);
       backdrop-filter: blur(10px);
    }
  }

  /* Media Querys
  ------------------------------------------------------ */
  @media (width < 768px)  {
    main {
      padding-left: 0 ;
      justify-content: center;
    }

  }
</style>
