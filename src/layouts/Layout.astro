---
import BurguerIcon from "@/icons/BurguerIcon.astro";
import LogoYTM from "@/icons/LogoYTM.astro";
import MainIcon from "@/icons/MainIcon.astro";
import ExplorerIcon from "@/icons/ExplorerIcon.astro";
import LibraryIcon from "@/icons/LibraryIcon.astro";
import { Player } from "@/components/Player";
import ViewTransitions from "astro/components/ViewTransitions.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="overflow-x-hidden">
    <div id="app" class="h-screen w-full gap-2">
      <div class="[grid-area:content] relative">
        <div
          class="absolute top-0 bottom-0 z-[-2] min-h-screen w-full bg-gray-50 dark:bg-gray-950
        bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(217,216,255,0.5),rgba(255,255,255,0.9))]
        dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
        >
        </div>
        <header class="flex flex-row items-center p-4 gap-4 w-full">
          <button class="rounded-full p-2 hover:bg-gray-700 transition-all">
            <BurguerIcon />
          </button>
          <a href="/" aria-label="Inicio">
            <LogoYTM />
          </a>
        
          <!-- Nav -->
        
        </header>

        <aside
          transition:persist
          class="flex flex-row fixed bg-gray-600 w-60 ml-2 z-10 transition-all rounded-lg"
          id="aside"
        >
          <ul>
            <li>
              <a 
                id="princ"
                href="/"
                class="flex flex-row items-center rounded-lg pr-[123px]  gap-2 p-4 text-white hover:bg-gray-700 transition-all"
              >
                <MainIcon />
                <span id="princ-txt">Inicio</span>
              </a>
            </li>
            <li>
              <a
                id="expl"
                href="/explorer"
                class="flex flex-row items-center rounded-lg pr-[123px] gap-2 w-full p-4 text-white hover:bg-gray-700 transition-all"
              >
                <ExplorerIcon />
                <span id="expl-txt">Explorar</span>
              </a>
            </li>
            <li>
              <a
                id="lib"
                href="/library"
                class="flex flex-row items-center rounded-lg pr-[123px] gap-2 p-4 text-white hover:bg-gray-700 transition-all"
              >
                <LibraryIcon />
                <span id="lib-txt">Biblioteca</span>
              </a>
            </li>
          </ul>
        </aside>
        <main class="flex flex-col w-full gap-4 pl-72 transition-all overflow-hidden">
          <slot />
        </main>
      </div>
      <footer class="[grid-area:player] bg-gray-800 z-10">
        <Player client:load transition:name="media-player" transition:persist/>
      </footer>
    </div>
  </body>
</html>

<script transition:persist>
  document.addEventListener('astro:page-load', () => {
  const button  = document.querySelector('button');
  const aside = document.querySelector('#aside');
  const explorerText = document.querySelector('#expl-txt');
  const libraryText = document.querySelector('#lib-txt');
  const principalText = document.querySelector('#princ-txt');

  const explorer = document.querySelector('#expl');
  const library = document.querySelector('#lib');
  const principal = document.querySelector('#princ');

  const main = document.querySelector('main');

  button?.addEventListener('click', () => {
    aside?.classList.toggle('w-[60px]');
    explorerText?.classList.toggle('hidden');
    libraryText?.classList.toggle('hidden');
    principalText?.classList.toggle('hidden');
    main?.classList.toggle('pl-[90px]');
  });
  
  if(aside?.classList.contains('w-[60px]')) {
    main?.classList.add('pl-[90px]');
    explorer?.classList.toogle('pr-[123px]');
    library?.classList.toogle('pr-[123px]');
    principal?.classList.remove('pr-[123px]');
  } 
});
</script>

<style is:global>
  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  body {
    background: #232323;
  }

  #app {
    display: grid;
    grid-template-areas:
      "content content content"
      "content content content"
      "player player player";
    grid-template-columns: 250px 1fr 1fr;
    grid-template-rows: 70px 1fr 70px;
  }
</style>
