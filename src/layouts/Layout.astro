---
import { ViewTransitions } from 'astro:transitions';

import { Player } from "@/components/Player";
import NavBar from '@/components/NavBar.astro';
import Aside from '@/components/Aside.astro';
import NavMobile from '@/components/NavMobile.astro';
import Backgound from '@/components/Backgound.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="icon" href="https://music.youtube.com/img/favicon_32.png" sizes="32x32" type="image/png">
    <ViewTransitions />
  </head>
  <body class="overflow-x-hidden h-dvh">
    <div id="app" class="h-screen w-full gap-2">
      <div class="relative">
        <Backgound />
        <NavBar />
        <Aside />
        <main class="flex flex-col w-full gap-4 py-20 p-4 mb-20 md:pl-72 transition-all overflow-hidden">
          <slot />
        </main>
      </div>
      
      <footer class="fixed  bottom-0 flex w-full md:max-h-20 bg-gray-800 z-10">
        <div class="w-full hidden md:block ">
          <Player client:load transition:name="media-player" transition:persist/>
        </div>
        <NavMobile />
      </footer>
    </div>
  </body>
</html>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
  const button  = document.querySelector('button');
  const $aside = document.querySelector('#aside');
  const explorerText = document.querySelector('#expl-txt');
  const libraryText = document.querySelector('#lib-txt');
  const principalText = document.querySelector('#princ-txt');

  const explorer = document.querySelector('#expl');
  const library = document.querySelector('#lib');
  const principal = document.querySelector('#princ');

  const $main = document.querySelector('main');

  button?.addEventListener('click', () => {
    if(screen.width > 782) {
    $aside?.classList.toggle('w-[60px]');
    explorerText?.classList.toggle('hidden');
    libraryText?.classList.toggle('hidden');
    principalText?.classList.toggle('hidden');
    $main?.classList.toggle('md:pl-[90px]');
    explorer?.classList.toggle('px-[18px]');
    library?.classList.toggle('px-[18px]');
    principal?.classList.toggle('px-[18px]')
    }
    else {
      $aside?.classList.toggle('left-0');
    }
  });
  
  if($aside?.classList.contains('w-[60px]')) {
    $main?.classList.toggle('lg:pl-[90px]');
    explorer?.classList.toggle('px-[80px]');
    library?.classList.toggle('px-[80px]');
    principal?.classList.toggle('px-[80px]');
  } 
});
</script>

<style is:global>
  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  body {
    background: #232323;
  }


  header {
    scrollbar-gutter: stable;
    animation: scrollBlur linear both;
    animation-timeline: scroll();
    animation-range: 0 50px;
  }

  /* Keyframes
  ------------------------------------------------------ */

  @keyframes scrollBlur {
    to {
       background: rgba(0, 0, 0, 0.3);
       backdrop-filter: blur(10px);
    }
  }

  @media (width < 782px)  {
    main {
      padding-left: 0 ;
      justify-content: center;
    }

    aside {
      left: -100%;
    }
  }
</style>
